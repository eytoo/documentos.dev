/**
 * Agrega un icono de cargando a un boton
 * 
 * @return {void}
 */
function addLoading(button) {
    var appendElement = " <i class='fa fa-spin fa-spinner et-loading'></i>";
    button.append(appendElement);
}
/**
 * Remueve el icono de cargando de un boton
 
 * @return {void}
 */
function removeLoading(button) {
    $(".et-loading").remove();
}

/**
 * Función permite limpiar los campos que tengan la clase "clean-input"
 * 
 * @param  {Form Object}  Objeto del formulario
 * @return {[void]}
 */
function limpiaForm(miForm = null) {
    $(".clean-input").val("");
    $(".clean-input").text("");
}
/**
 * Función que permite activar a un boton o cualquier elemento
 * 
 * @param  {Button object}
 * @return {void}
 */
function enableButton(button) {
    button.removeAttr("disabled");
}

/**
 * Función que permite desactivar a un boton o cualquier elemento
 * 
 * @param  {Button object}
 * @return {void}
 */
function disableButton(button) {
    button.attr("disabled", "disabled");
}
/**
 * Función que permite mostrar o ocultar un Modal de Bootstrap, por defecto oculta
 * 
 * @param  idModal  {[string]}  Id del modal
 * @param  type     {[string]}  Tipo de modal (show,hide)
 * @return {[void]}
 */
function showHideModal(idModal, type = null) {
    var typeVar = "hide";
    if (type != null) {
        typeVar = type;
    }
    $('#' + idModal).modal(typeVar);
    $('#' + idModal).modal('handleUpdate')
}

/**
 * Función que retorna una alerta para errores de petición
 * REQUIERE DE PLUGIN SWAL PARA FUNCIONAR
 * 
 * @return {void}
 */
function infoError(message = '') {
    notie.alert("error", message == '' ? 'Error al completar la operación' : message, 3);
}

/**
 * Función que retorna un mensaje de alerta para peticiones correctas
 * REQUIERE DE PLUGIN SWAL PARA FUNCIONAR
 * 
 * @return {void}
 */
function infoOk(message = '') {
    notie.alert("success",message == '' ? 'La operación se realizo con éxito' : message, 3);
}